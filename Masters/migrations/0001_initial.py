# Generated by Django 5.0.9 on 2025-08-25 05:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='branch_master',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'branch_master',
            },
        ),
        migrations.CreateModel(
            name='department_master',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'department_master',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('pdf_file', models.TextField(blank=True, null=True)),
                ('num_pages', models.TextField(blank=True, null=True)),
                ('file_size', models.TextField(blank=True, null=True)),
                ('extracted_text', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('form_file_id', models.TextField(blank=True, null=True)),
                ('file_name', models.TextField(blank=True, null=True)),
                ('uploaded_name', models.TextField(blank=True, null=True)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('field_id', models.TextField(blank=True, null=True)),
                ('file_id', models.TextField(blank=True, null=True)),
                ('form_id', models.TextField(blank=True, null=True)),
                ('form_data_id', models.TextField(blank=True, null=True)),
                ('logged_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'ocr_file_upload',
            },
        ),
        migrations.CreateModel(
            name='document_master',
            fields=[
                ('doc_id', models.AutoField(primary_key=True, serialize=False)),
                ('doc_name', models.TextField(blank=True, null=True)),
                ('doc_subpath', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField(default=1)),
                ('mandatory', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'document_master',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'logs',
            },
        ),
        migrations.CreateModel(
            name='para_master',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('para_name', models.CharField(blank=True, max_length=100, null=True)),
                ('para_details', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'para_master',
            },
        ),
        migrations.CreateModel(
            name='send_user',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('mobile', models.TextField(blank=True, null=True)),
                ('department', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'send_user',
            },
        ),
        migrations.CreateModel(
            name='stakeholders',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stakeholders',
            },
        ),
        migrations.CreateModel(
            name='StateMaster',
            fields=[
                ('state_id', models.AutoField(primary_key=True, serialize=False)),
                ('state_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'state_master',
            },
        ),
        migrations.CreateModel(
            name='status_color',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('color', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'status_color',
            },
        ),
        migrations.CreateModel(
            name='status_master',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.TextField(blank=True, null=True)),
                ('status_type', models.TextField(blank=True, null=True)),
                ('status_color', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField(default=1)),
                ('level', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'status_master',
            },
        ),
        migrations.CreateModel(
            name='application_search',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('href', models.TextField(blank=True, null=True)),
                ('menu_id', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_search_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='app_search_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'application_search',
            },
        ),
        migrations.CreateModel(
            name='parameter_master',
            fields=[
                ('parameter_id', models.AutoField(primary_key=True, serialize=False)),
                ('parameter_name', models.TextField(blank=True, null=True)),
                ('parameter_value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_column='updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'parameter_master',
            },
        ),
        migrations.CreateModel(
            name='DistrictMaster',
            fields=[
                ('district_id', models.AutoField(primary_key=True, serialize=False)),
                ('district_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='Masters.statemaster')),
            ],
            options={
                'db_table': 'district_master',
            },
        ),
        migrations.CreateModel(
            name='CityMaster',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.TextField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.TextField(blank=True, null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='districts_id', to='Masters.districtmaster')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='Masters.statemaster')),
            ],
            options={
                'db_table': 'city_master',
            },
        ),
    ]
